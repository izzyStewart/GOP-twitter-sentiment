{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predicting twitter sentiment using neural networks"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color=blue>Artificial intellegence coursework 1     | by Izzy Stewart</font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this project I am using the chosen dataset to build a neural network and investigate different hyper-parameter settings to optimize its performance. I wanted to explore my interest in natural language processing and how successful a neural network can be predicting the sentiment of a text based dataset. With this in mind I found an interesting dataset from Kaggle that took tweets that used the hashtag from the Republican GOP debate in 2016. Contributors to the dataset were asked if each tweet had a positive, negative or neutral tone and the result was then stored in the variable 'sentiment.' I thought using tweets from a debate like this would be an interesting experiment for a neural network where many people have very strong opinions, which would come through in the words contained in the tweet data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"images/gop-debate-candidates.jpg\" width=\"600\" align=left>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Image taken from GOP debate."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The problem type\n",
    "The sentiment analysis problem I am using is defined as a multiclass single label classification problem. This means there are multiple classes (positive, negative and neutral sentiment) but each observation (tweet) can only belong to one of those classes.  \n",
    "\n",
    "#### Hypothesis\n",
    "My hypothesis for this project is that the sentiment of the tweets in the given dataset can be predicted with an accuracy rate better than 50%. Once this hypothesis is acheived I want to tune optimize the model and its hyper-parameter settings in order to improve the accuracy rate.\n",
    "\n",
    "#### Success metric \n",
    "Accuracy rate of the model on the test data.\n",
    "\n",
    "#### Evaluation protocol\n",
    "A hold out validation set taken from the training data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dataset provides many more variables other than tweet and sentiment, but for the purpose of this project I am going to ignore them. It is worth remembering that the sentiment of each tweet was decided by contributors to the dataset. This means, in a sense, the neural network I build will be learning to predict the contributors opinion of the tweets sentiment, which might not be everyones view of the sentiment. However I think this still provides an interesting platform for analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"images/csv_image.png\" width=\"600\" align=left>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Image of original dataset in csv format."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some of the datasets from Keras come already in the correct format but as this dataset is taken from kaggle in csv format, before running the data through any models some preprocessing needs to take place. For the neural networks we are interested in using, the input data needs to be in both tensor format and integer values 0 and 1. To use our sentiment dataset the following preprocessing tasks are needed:\n",
    "\n",
    "1. Remove un-needed columns and split into input and labels (tweets and sentiment)\n",
    "2. Transform the sentiment data into integer values and then into arrays of values 0 or 1 using one-hot encoding\n",
    "3. Transform each word in the tweet data into numbered values corresponding to a dictionary of words\n",
    "4. Transform the integer lists into correct tensor format using vectorise function\n",
    "5. Split the data into training-validation-test datasets (shuffled)\n",
    "\n",
    "In the cells below I run through the above steps and provide details of what was done at each stage. Many of the functions I have created make use of the keras preprocessing module, which I found really useful. I also used sklearn tools for splitting the training/validation and test data as well as to shuffle these datasets in unision. For the full code used, see the preprocessing py file I created. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Import modules and read in data\n",
    "\n",
    "The first step was to import the modules needed. Many of the modules needed for the preprocessing stage are imported inside the 'preprocessing' module created for this project. I have kept all preprocessing functions and classes inside this module to help keep this report clean and makes is easier to display the results. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "# Importing modules needed for analysis.\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.utils import shuffle\n",
    "import numpy as np\n",
    "from keras import regularizers\n",
    "from keras import optimizers\n",
    "\n",
    "# Importing created .py files\n",
    "import preprocessing as pre"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tweet:  RT @NancyLeeGrahn: How did everyone feel about the Climate Change question last night? Exactly. #GOPDebate\n",
      "Class:  Neutral\n"
     ]
    }
   ],
   "source": [
    "# Using the preprocess module we can read in the two files as arrays.\n",
    "sentiment_list = pre.read_csv('data/GOP_sentiment.csv','sentiment')\n",
    "tweet_list = pre.read_csv('data/GOP_sentiment.csv','text')\n",
    "# As a test I have printed the first tweet in the dataset along with its assigned sentiment class.\n",
    "print(\"Tweet: \", tweet_list[0])\n",
    "print(\"Class: \", sentiment_list[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['rt', 'nochristie16', 'chrischristie', 'blasts', 'sanctuary', 'cities', 'then', 'finds', 'he', 'has', 'four', 'under', 'his', 'own', 'nose', 'in', 'nj', 'gopdebate', 'fail', 'foxnews', 'http', 'â€¦']\n",
      "['negative']\n"
     ]
    }
   ],
   "source": [
    "# Shuffling the data to ensure randomness.\n",
    "sentiment_list, tweet_list = shuffle(sentiment_list, tweet_list, random_state=0)\n",
    "# Read in the text_to_words function inside preprocessing and assigning to 'tweet_list' variable.\n",
    "tweet_list = pre.text_to_words(tweet_list)\n",
    "# Calling the above function to seperate each word in the tweet as its own item.\n",
    "sentiment_list = pre.text_to_words(sentiment_list)\n",
    "# Printing the same tweet and sentiment as above but now in word list format.\n",
    "print(tweet_list[0])\n",
    "print(sentiment_list[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Get sentiment labels into correct format\n",
    "\n",
    "Both the input data and class labels need to be in the correct format to feed into a neural network. For the network type we plan to use (multiclass, single label class) we need both datasets in tensor format. In the cells below you can see the steps taken to transform the sentiment labels into this format."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Read in the format labels class from the preprocessing module.\n",
    "format_labels = pre.FormatLabels(sentiment_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calling the 'text to num' function from the format labels class.\n",
    "sentiment_labels = format_labels.text_to_num()\n",
    "# Outputting the first label in number format.\n",
    "sentiment_labels[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1., 0., 0.], dtype=float32)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calling the 'one_hot' function from the format labels class.\n",
    "y_values = format_labels.one_hot(sentiment_labels)\n",
    "# Outputting the first label in tensor format.\n",
    "y_values[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Create word list\n",
    "\n",
    "Transforming the tweets into tensor format was a little more tricky than the class labels. Before applying any transformations on the tweet data, I needed to create a word list from every word that appears in the array of tweets more than once. I will then be able to use this word list to assign the words in the tweets to the index number of the word list. I chose to only use words that appear more than once to remove random, one-off words that will not be useful for analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['linkedin', 'tanned']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calling the create word list class from the preprocessing module.\n",
    "create_word_list = pre.CreateWordList()\n",
    "tweet_word_list = create_word_list.word_list(tweet_list) # Can take a few minutes\n",
    "tweet_word_list[0:2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Get tweets into correct format\n",
    "\n",
    "Once the word list has been created I then used this list to loop through the tweets updating each word with the corresponding number. After that I used a vectorise function to transform the numbered lists into tensors with all zeros except where the word is ordered where there is a one."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reading in the 'FormatTweetList' class from the preprocessing module.\n",
    "format_tweet_list = pre.FormatTweetList()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calling the 'tweet_encode' function from the format tweet list class. \n",
    "tweet_num_list = format_tweet_list.tweet_encode(tweet_list, tweet_word_list) # Can take up to five minutes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[7858, 3279, 2083, 4416, 7861, 5870, 3999, 46, 5160, 6819, 6060, 6370, 2901, 3966, 508, 7149, 29, 7687, 498, 489, 3623, 1883]\n"
     ]
    }
   ],
   "source": [
    "# Printing the first tweet in the array with each word now in number format.\n",
    "print(tweet_num_list[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calling the 'vectorize_sequence' function from the format tweet list class.\n",
    "x_values = format_tweet_list.vectorize_sequences(tweet_num_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       ...,\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.]])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Outputting the resulting tensor.\n",
    "x_values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Split data for training and testing\n",
    "\n",
    "Now the input and class data is ready in the correct format I need to split into sepeerate datasets for training, validating and testing. The reason we need a validation set is so we can improve our models without learning from the test set (which should remain unknown and only be used for reporting and evaluating our final model). I chose to split the data 80 / 20 training and testing and then 80 / 20 again training and validation sets. This was taken from best practice suggestions where the need for the training set to be as large as possible for improving the model is highlighted.\n",
    "\n",
    "I decided not use k-fold or iterated k-fold in this project for two reasons. Firstly, with over 13,800 tweets, this dataset is not small enough to necessarily suffer from statistically underrepresenting the data like the boston housing dataset. I was also aware that applying techniques such as k-fold or iterated k-fold with shuffling would require more computational power meaning the models would take longer to run. As this project requires alot of testing/ tuning of hyperparameters I decided to save time and take the hit on not using these methods. I will take this into account when I evaluate the test results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x train: 8876\n",
      "x test: 2775\n",
      "x val: 2220\n",
      "y train: 8876\n",
      "y test: 2775\n",
      "y val: 2220\n"
     ]
    }
   ],
   "source": [
    "# Splitting data training and testing 80 / 20, then 80 / 20 training and validation\n",
    "x_train, x_test, y_train, y_test = train_test_split(x_values, y_values, test_size=0.2)\n",
    "x_train, x_val, y_train, y_val = train_test_split(x_train, y_train, test_size=0.2)\n",
    "\n",
    "# Print the size of each set.\n",
    "print(\"x train:\", len(x_train))\n",
    "print(\"x test:\", len(x_test))\n",
    "print(\"x val:\", len(x_val))\n",
    "print(\"y train:\", len(y_train))\n",
    "print(\"y test:\", len(y_test))\n",
    "print(\"y val:\", len(y_val))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model training"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the processing is complete and the data is divided into the correct training / validation and test sets, we are ready to train on our neural network models. As previously mentioned, we want to build a model for a multi-class binary label problem. This means the output layer has more than one class (positive, negative and neutral) but each tweet can only be one of these classes. As previously mentioned, I am using the universal workflow for this project. So with this in mind, in this stage I am looking to:\n",
    "\n",
    "1. Acheive a model that is better than a baseline\n",
    "2. Scale up this model\n",
    "3. Regulise and tune down this model\n",
    "\n",
    "In the process of steps 2 and 3 I will be testing different variations of hyper-parameter settings to try and best optimize my model. This involves repeatedly training my model and then testing on the evaluation set. For each test performed, I will run the best performing model on the test set and record the results. However, at no point in this process will I use the test results to influence my training / tuning of the hyper-paramter settings. This is important as the test set, as far as possible should remain hidden to the model as learning of the test set will lead to bias results where the model overfits to that particular test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import modules needed for model building / training.\n",
    "from keras import models\n",
    "from keras import layers\n",
    "import pandas as pd\n",
    "from pandas.api.types import CategoricalDtype\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from keras import regularizers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Model functions\n",
    "\n",
    "The functions below allow me to test different hyperparameters without having to write the code to build the models multiple times. The first function builds a model and the second fits it and collects the needed loss and accuracy results on both the training a validation sets. I have left the optimizer as rmsprop (I will test variations of the learning rate later) and the loss as categorical crossentropy (as suggested for a multiclass single label problem)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to build a neural network model where you input your desired hyperparameters.\n",
    "def build_model(neuron_num, layer_num, drop_num):\n",
    "    model = models.Sequential()\n",
    "    # The input layer is added here where the activation is relu and the shape is 7995 (tensor size).\n",
    "    model.add(layers.Dense(neuron_num, activation = 'relu', input_shape = (7995,)))\n",
    "    # A for loop to add the number of layers described above.\n",
    "    for x in range(0, layer_num):\n",
    "        model.add(layers.Dense(neuron_num, activation = 'relu'))\n",
    "        model.add(layers.Dropout(drop_num))\n",
    "    # The output layer is three neurons for each positive, negative and neutral class.\n",
    "    model.add(layers.Dense(3, activation = 'softmax'))\n",
    "    # Setting optimizer, loss function and metrics to collect.\n",
    "    model.compile(optimizer = 'rmsprop', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def model_fit(model,x,y,x_val,y_val,epoch,batch):\n",
    "    # Setting the metric variables to 'global' so I can use outside the program.\n",
    "    global val_loss, loss, acc, val_acc\n",
    "    # Printing line to show reader program has started.\n",
    "    print(\"In progress: Model fitting to train and testing on validation.\")\n",
    "    # Fitting model and assigning to 'history' variable.\n",
    "    history = model.fit(x,\n",
    "                        y,\n",
    "                        epochs = epoch,\n",
    "                        batch_size = batch,\n",
    "                        validation_data = (x_val, y_val),\n",
    "                        # Set to zero to avoid too much text outputted.\n",
    "                        verbose = 0)\n",
    "    # Printing line to show program has finished.\n",
    "    print(\"Finished. Model trained, and tested on the validation set.\")\n",
    "    # Collecting loss and accuracy metrics in list format.\n",
    "    val_loss = history.history['val_loss']\n",
    "    loss = history.history['loss']\n",
    "    acc = history.history['acc']\n",
    "    val_acc = history.history['val_acc']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Achieving a baseline model\n",
    "\n",
    "Our first step is to develop a model that underfits but has statistical power. Using the two functions above I trained a model with two layers and five neurons per layer. This is trained on 28 epochs. As you can see below overfitting began at 12 epochs. I then retrain a new model with the same parameters and the optimum epoch number to evaluate on the test set. It is important to do this on a new model to acheive an unbiased result.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building model with two hidden layers and five neurons per hidden layer.\n",
    "model = build_model(5,2,0)\n",
    "# Fitting above model to train set up to 28 epochs and 512 batch sizes.\n",
    "model_fit(model, x_train, y_train ,x_val, y_val, 28, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_317 (Dense)            (None, 5)                 39980     \n",
      "_________________________________________________________________\n",
      "dense_318 (Dense)            (None, 5)                 30        \n",
      "_________________________________________________________________\n",
      "dropout_225 (Dropout)        (None, 5)                 0         \n",
      "_________________________________________________________________\n",
      "dense_319 (Dense)            (None, 5)                 30        \n",
      "_________________________________________________________________\n",
      "dropout_226 (Dropout)        (None, 5)                 0         \n",
      "_________________________________________________________________\n",
      "dense_320 (Dense)            (None, 3)                 18        \n",
      "=================================================================\n",
      "Total params: 40,058\n",
      "Trainable params: 40,058\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# Printing summary which gives an overview of each hidden layers. As you can see dropout is set to zero.\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overfitting begins at  12  epochs.\n"
     ]
    }
   ],
   "source": [
    "# Running argmin to see where overfitting begins.\n",
    "print(\"Overfitting begins at \", np.argmin(val_loss) + 1, \" epochs.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building new model on optimum number of epochs.\n",
    "model = build_model(5,2,0)\n",
    "model_fit(model, x_train, y_train ,x_val, y_val, 12, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2775/2775 [==============================] - 1s 249us/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.758725174311045, 0.6742342340194427]"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Returns the loss value & metrics values for the model in test mode.\n",
    "test_results = model.evaluate(x_test, y_test)\n",
    "test_results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The test results show a loss of 0.76 and an accuracy of 0.67. To decide if this model has statistical power we need to decide what our baseline is. For the purpose of this project I am setting the baseline to be better than 50%, as lower than 50% is worse than random guessing. As 0.62 accuracy is higher than 50% (0.5) we can say this model has statistical power."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scaling up\n",
    "\n",
    "After acheiving a baseline model with statistical power, the next step is to experiment with different hyper-parameters to scale up the model, reaching the point where is overfits the data. Once this overfitting has started we can then apply the next step to regulize and tune the model down to its optimum state.\n",
    "\n",
    "When testing different hyperparameters its important to keep in mind the statistical uncertainty of these settings. Machine learning models are rarely or even never a perfect representation of the observations and this is partly due to the massive ammount of different possible hyperparamter combinations. With this in mind, I am choosing a set of fixed values hyperparemeter values and will test the model on each of these values. This insures a thorough test at different hyperparmeter settings. With more time I would have liked to take this further using the grid search method where you can optimize the paramters by searching through a manually specified subset of the hyperparameter space.\n",
    "\n",
    "To scale up the model I will first test variations of the number of hidden layers and the number of neurons within it. In the same vein as the grid search method, I will use a set number of neurons per hidden layer in each test, for example for testing two layers I will test 5,5 then 10,10 ect number of neurons. The function below loops through the training model functions above testing four different options for the number of neurons per layer. The first number is five (the same as the baseline) and the highest is forty. I then run this on 2, 4, 8 and 16 layers. I have kept all other parameters the same to make it a fair test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating a list 'neuron_num' to define the number of neurons per layer to test training each model on.\n",
    "neuron_num = [5, 10, 20, 40]\n",
    "\n",
    "# Function created to loop through the neuron_num list and train a new model on each item in that list.\n",
    "def test_layer_size(neuron_num, layer_num):\n",
    "    # Setting global variables to use outside the function.\n",
    "    global val_loss_list, train_loss_list, val_acc_list, train_acc_list\n",
    "    val_loss_list = []\n",
    "    train_loss_list = []\n",
    "    val_acc_list = []\n",
    "    train_acc_list = []\n",
    "    # For loop to build i number of models using i number of neurons per layer.\n",
    "    for i in range(len(neuron_num)):\n",
    "        # Printing line to show which neuron number is being used in each model train.\n",
    "        print(\"Training with layer size: \", neuron_num[i])\n",
    "        mod = build_model(neuron_num[i], layer_num,0)\n",
    "        # Fitting model.\n",
    "        model_fit(mod, x_train, y_train ,x_val, y_val, 28, 512)\n",
    "        # Append loss and accuracy metrics to lists.\n",
    "        val_loss_list.append(val_loss)\n",
    "        train_loss_list.append(loss)\n",
    "        val_acc_list.append(val_acc)\n",
    "        train_acc_list.append(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with layer size:  5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  10\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  20\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  40\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Testing with two hidden layers\n",
    "test_layer_size(neuron_num, 2)\n",
    "# Assigning metrics to new variables (for reporting later).\n",
    "train_loss_2 = train_loss_list\n",
    "val_loss_2 = val_loss_list\n",
    "val_acc_2 = val_acc_list\n",
    "train_acc_2 = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with layer size:  5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  10\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  20\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  40\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Testing with four hidden layers\n",
    "test_layer_size(neuron_num, 4)\n",
    "# Assigning metrics to new variables (for reporting later).\n",
    "train_loss_4 = train_loss_list\n",
    "val_loss_4 = val_loss_list\n",
    "val_acc_4 = val_acc_list\n",
    "train_acc_4 = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with layer size:  5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  10\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  20\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  40\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Testing with eight hidden layers\n",
    "test_layer_size(neuron_num, 8)\n",
    "# Assigning metrics to new variables (for reporting later).\n",
    "train_loss_8 = train_loss_list\n",
    "val_loss_8 = val_loss_list\n",
    "val_acc_8 = val_acc_list\n",
    "train_acc_8 = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with layer size:  5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  10\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  20\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with layer size:  40\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Testing with sixteen hidden layers\n",
    "test_layer_size(neuron_num, 16)\n",
    "# Assigning metrics to new variables (for reporting later).\n",
    "train_loss_16 = train_loss_list\n",
    "val_loss_16 = val_loss_list\n",
    "val_acc_16 = val_acc_list\n",
    "train_acc_16 = train_acc_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Plotting the results. \n",
    "\n",
    "The plots below depict the training and validation loss respectively for each of the five models for each layer size. As a reminder, to optimize the models I am using the validation loss rather than accuracy to define the models suceess on the validation set. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to plot the validation or training metrics for a set of model paramters.\n",
    "def plot_models(metrics_list, labels_list, ylabel, title):\n",
    "    colors = ['b','r','g','y','m']\n",
    "    epochs = range(1, len(train_loss_list[0]) + 1)\n",
    "    for i in range(len(metrics_list)):\n",
    "        plt.plot(epochs, metrics_list[i], colors[i], label=labels_list[i])\n",
    "    plt.xlabel('Epochs')\n",
    "    plt.ylabel(ylabel)\n",
    "    plt.title(title)\n",
    "    plt.legend() \n",
    "    plt.show()    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results where there are two hidden layers.\n",
    "labels_list = ['5 neurons','10 neurons','20 neurons','40 neurons']\n",
    "plot_models(train_loss_2, labels_list, \"Training loss\", \"Training loss 2 layers\")\n",
    "plot_models(val_loss_2, labels_list, \"Validation loss\", \"Validation loss 2 layers\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results where there are four hidden layers.\n",
    "plot_models(train_loss_4, labels_list, \"Training loss\", \"Training loss 4 layers\")\n",
    "plot_models(val_loss_4, labels_list, \"Validation loss\", \"Validation loss 4 layers\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results where there are eight hidden layers.\n",
    "plot_models(train_loss_8, labels_list, \"Training loss\", \"Training loss 8 layers\")\n",
    "plot_models(val_loss_8, labels_list, \"Validation loss\", \"Validation loss 8 layers\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results where there are sixteen hidden layers.\n",
    "plot_models(train_loss_16, labels_list, \"Training loss\", \"Training loss 16 layers\")\n",
    "plot_models(val_loss_16, labels_list, \"Validation loss\", \"Validation loss 16 layers\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see from the plots above all models follow a similar pattern where the loss on the training set will just keep going down whereas the loss on the validation set will decrease to a certain number of epochs, and then start increasing. This is where the model has started to overfit to the training data. Looking at the validation loss plots I notice a few patterns:\n",
    "\n",
    "1. As the number of neurons per hidden layer increase, overfitting tends to happen faster and more rapidly. This is likely due to the hidden layers being too large and so over learning from the training data more quickly. \n",
    "2. As the number of neurons per hidden layer increase, the lines become less smooth. This could again be due to the larger layers learning more complex patterns in the training data, which can cause the loss to go up and down more rapidly at each epoch run.\n",
    "3. As the number of layers increase, overfitting overall seems to happen faster. As with the size of the layers, increasing the number of layers can give the model more power to find more patterns in the training data, which can lead to overfitting.\n",
    "\n",
    "With the above plots it is difficult to see which layer size and layer number combination performed best and to compare where overfitting starts. That is why in the next cell I collect where overfitting begins at each model run along with the lowest validation loss score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 layers, 5 neurons per hidden layer:  18\n",
      "2 layers, 10 neurons per hidden layer:  15\n",
      "2 layers, 20 neurons per hidden layer:  5\n",
      "2 layers, 40 neurons per hidden layer:  4\n",
      "4 layers, 5 neurons per hidden layer:  15\n",
      "4 layers, 10 neurons per hidden layer:  7\n",
      "4 layers, 20 neurons per hidden layer:  5\n",
      "4 layers, 40 neurons per hidden layer:  3\n",
      "8 layers, 5 neurons per hidden layer:  9\n",
      "8 layers, 10 neurons per hidden layer:  6\n",
      "8 layers, 20 neurons per hidden layer:  3\n",
      "8 layers, 40 neurons per hidden layer:  2\n",
      "16 layers, 5 neurons per hidden layer:  25\n",
      "16 layers, 10 neurons per hidden layer:  24\n",
      "16 layers, 20 neurons per hidden layer:  6\n",
      "16 layers, 40 neurons per hidden layer:  2\n"
     ]
    }
   ],
   "source": [
    "# Checking where overfitting begins for each variation.\n",
    "print(\"2 layers, 5 neurons per hidden layer: \", np.argmin(val_loss_2[0]) + 1)\n",
    "print(\"2 layers, 10 neurons per hidden layer: \", np.argmin(val_loss_2[1]) + 1)\n",
    "print(\"2 layers, 20 neurons per hidden layer: \", np.argmin(val_loss_2[2]) + 1)\n",
    "print(\"2 layers, 40 neurons per hidden layer: \", np.argmin(val_loss_2[3]) + 1)\n",
    "print(\"4 layers, 5 neurons per hidden layer: \", np.argmin(val_loss_4[0]) + 1)\n",
    "print(\"4 layers, 10 neurons per hidden layer: \", np.argmin(val_loss_4[1]) + 1)\n",
    "print(\"4 layers, 20 neurons per hidden layer: \", np.argmin(val_loss_4[2]) + 1)\n",
    "print(\"4 layers, 40 neurons per hidden layer: \", np.argmin(val_loss_4[3]) + 1)\n",
    "print(\"8 layers, 5 neurons per hidden layer: \", np.argmin(val_loss_8[0]) + 1)\n",
    "print(\"8 layers, 10 neurons per hidden layer: \", np.argmin(val_loss_8[1]) + 1)\n",
    "print(\"8 layers, 20 neurons per hidden layer: \", np.argmin(val_loss_8[2]) + 1)\n",
    "print(\"8 layers, 40 neurons per hidden layer: \", np.argmin(val_loss_8[3]) + 1)\n",
    "print(\"16 layers, 5 neurons per hidden layer: \", np.argmin(val_loss_16[0]) + 1)\n",
    "print(\"16 layers, 10 neurons per hidden layer: \", np.argmin(val_loss_16[1]) + 1)\n",
    "print(\"16 layers, 20 neurons per hidden layer: \", np.argmin(val_loss_16[2]) + 1)\n",
    "print(\"16 layers, 40 neurons per hidden layer: \", np.argmin(val_loss_16[3]) + 1)\n",
    "\n",
    "# Collecting the overfit and validation loss metrics for best performing model in each neuron number.\n",
    "overfit_2 = [18, 15, 5, 4]\n",
    "val_loss_score_2 = [0.7241528559375454, 0.7512412633981791, 0.723956831296285, 0.7299792775162706]\n",
    "overfit_4 = [15, 7, 5, 3]\n",
    "val_loss_score_4 = [0.8027667635195964, 0.7547778351886852, 0.750003974072568, 0.7540187303010408]\n",
    "overfit_8 = [9, 6, 3, 2]\n",
    "val_loss_score_8 = [0.7752577793490779, 0.7746045615222003, 0.7808848867545257, 0.7745506008466084]\n",
    "overfit_16 = [25, 24, 6, 2]\n",
    "val_loss_score_16 = [0.9175237576166789, 0.9179087576565442, 0.7783206843041085, 0.770075011253357]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# x-axis neuron size per layer. \n",
    "neurons = [5,10,20,40]\n",
    "\n",
    "# Plotting where overfitting starts for each test on the validation set.\n",
    "plt.plot(neurons, overfit_16, \"r\", label=\"16 layers\")\n",
    "plt.plot(neurons, overfit_8, \"b\", label=\"8 layers\")\n",
    "plt.plot(neurons, overfit_4, \"y\", label=\"4 layers\")\n",
    "plt.plot(neurons, overfit_2, \"m\", label=\"2 layers\")\n",
    "plt.xlabel('Neurons')\n",
    "plt.ylabel(\"Overfit starts\")\n",
    "plt.title(\"Overfitting starting for layer numbers\")\n",
    "plt.legend() \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The plot above depicts where overfitting begins for each neuron number within each layer size. It is intersting to see that, with the acception of the 16 layer models, overfitting starts earlier as the number of layers and neurons per layer increase. Those results are expected as the models are likely learning too many patterns in the training set. \n",
    "\n",
    "However, at five and ten neurons per layer overfitting took alot longer (more epochs) on the 16 layer model, than the models with less numbers of layers. My instinct here is where there are so few neurons per layer the model picked up less information at each layer which led to overfitting taking longer. As the number of neurons per layer reaches greater than 20, the 16 layer models overfit faster, overtaking the other models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# x-axis neuron size per layer. \n",
    "neurons = [5,10,20,40]\n",
    "\n",
    "# Plotting the lowest validation loss acheived on each neuron number and layer number test.\n",
    "plt.plot(neurons, val_loss_score_16, \"r\", label=\"16 layers\")\n",
    "plt.plot(neurons, val_loss_score_8, \"b\", label=\"8 layers\")\n",
    "plt.plot(neurons, val_loss_score_4, \"y\", label=\"4 layers\")\n",
    "plt.plot(neurons, val_loss_score_2, \"m\", label=\"2 layers\")\n",
    "plt.xlabel('Neurons')\n",
    "plt.ylabel(\"Validation loss minimum\")\n",
    "plt.title(\"Validation loss - optimum acheive per layer size + neuron number\")\n",
    "plt.legend() \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot depicts the lowest validation scores acheived across all tests on the validation set. As you can see the best score was acheived using just two hidden layers and 20 neurons per layer. The worst result in this group is acheived from the 16 layer model with ten neurons per layer. Its interesting to see the eight layer models remain quite stable across all neuron sizes."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Build new models to predict on test set.\n",
    "\n",
    "I will now build four new models using the parameters of the best validation result for each layer size. I then record the results of the loss and accuracy on the test set for reporting later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building new models on optimum number of epochs/ neurons per layer.\n",
    "\n",
    "# Two hidden layers\n",
    "model_l2 = build_model(20,2,0)\n",
    "model_fit(model_l2, x_train, y_train ,x_val, y_val, 5, 512)\n",
    "\n",
    "# Four hidden layers\n",
    "model_l4 = build_model(20,4,0)\n",
    "model_fit(model_l4, x_train, y_train ,x_val, y_val, 5, 512)\n",
    "\n",
    "# Eight hidden layers\n",
    "model_l8 = build_model(40,8,0)\n",
    "model_fit(model_l8, x_train, y_train ,x_val, y_val, 2, 512)\n",
    "\n",
    "# Sixteen hidden layers\n",
    "model_l16 = build_model(40,16,0)\n",
    "model_fit(model_l16, x_train, y_train ,x_val, y_val, 2, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2775/2775 [==============================] - 1s 483us/step\n",
      "Two layers:  [0.7248006409352964, 0.6926126126340918]\n",
      "2775/2775 [==============================] - 1s 468us/step\n",
      "Four layers:  [0.7704620150617651, 0.672792792814272]\n",
      "2775/2775 [==============================] - 2s 819us/step\n",
      "Eight layers:  [0.777293095159101, 0.6727927929861052]\n",
      "2775/2775 [==============================] - 2s 851us/step\n",
      "Sixteen layers:  [0.8116468062057152, 0.6277477478551435]\n"
     ]
    }
   ],
   "source": [
    "# Returns the loss value & metrics values for the models in test mode.\n",
    "test_results_l2 = model_l2.evaluate(x_test, y_test)\n",
    "print(\"Two layers: \", test_results_l2)\n",
    "test_results_l4 = model_l4.evaluate(x_test, y_test)\n",
    "print(\"Four layers: \", test_results_l4)\n",
    "test_results_l8 = model_l8.evaluate(x_test, y_test)\n",
    "print(\"Eight layers: \", test_results_l8)\n",
    "test_results_l16 = model_l16.evaluate(x_test, y_test)\n",
    "print(\"Sixteen layers: \", test_results_l16)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The test results show that best result is with just two layers. However, as this is using the test set, we cannot use these results to affect our decision in tuning the model - these will just be used in reporting later. So I will take the best performing validation model forward for regulisation / tuning. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Regularise and tune\n",
    "\n",
    "From the scaling up process I have chosen the model size (layer numbers and neurons per layers) to take forward which has the lowest validation loss. This gives me a model that gets as close as I can to the underfitting/overfitting boundary when the model has neither too little or too much capacity. \n",
    "\n",
    "It is now time for me to apply regulising and tuning methods to reduce the models power so it overfits as little as possible to the training data. To do this I am testing different values for the following hyper-paramters:\n",
    "\n",
    "1. Dropout rate. This is the number of neurons to remove to aim to stop the model picking up on training patterns that are only unique to the training data.\n",
    "2. L1 & L2 regulisation. This is where a cost proportional to the absolute value of the weights is added to the loss function. In the case of L2 regulisation this cost is the square of the weights.\n",
    "3. Learning rate. This learning rate tells the optimizer how far to move the weights in the direction opposite of the gradient for a mini-batch. \n",
    "\n",
    "There are of course other hyper-paramters I can tune (batch size) and further methods for regulisation but these are the ones I am focusing on in this project."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Add a dropout rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropout values to test. Starting with zero (as used up until now).\n",
    "dropout = [0, 0.1, 0.2, 0.5]\n",
    "\n",
    "# Function to test effect of each dropout value on training and validation.\n",
    "def test_dropout(neuron_num, layer_num, dropout, epoch):\n",
    "    # Global variables for use outside of function.\n",
    "    global val_loss_list, train_loss_list, val_acc_list, train_acc_list\n",
    "    val_loss_list = []\n",
    "    train_loss_list = []\n",
    "    val_acc_list = []\n",
    "    train_acc_list = []\n",
    "    # For loop to build models for each dropout rate.\n",
    "    for i in range(len(dropout)):\n",
    "        print(\"Training with dropout: \", dropout[i])\n",
    "        mod = build_model(neuron_num, layer_num, dropout[i])\n",
    "        # Fitting model.\n",
    "        model_fit(mod, x_train, y_train ,x_val, y_val, epoch, 512)\n",
    "        # Append loss and accuracy metrics to correct list.\n",
    "        val_loss_list.append(val_loss)\n",
    "        train_loss_list.append(loss)\n",
    "        val_acc_list.append(val_acc)\n",
    "        train_acc_list.append(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with dropout:  0\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.1\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.2\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Calling above function with the assigned paramters.\n",
    "test_dropout(20, 2, dropout, 28)\n",
    "# Assign metrics to variables for reporting.\n",
    "train_loss_dropout = train_loss_list\n",
    "val_loss_dropout = val_loss_list\n",
    "val_acc_dropout = val_acc_list\n",
    "train_acc_dropout = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results for all dropout rates trained.\n",
    "labels_list = ['0 dropout','0.1 dropout','0.2 dropout','0.5 dropout']\n",
    "plot_models(train_loss_dropout, labels_list, \"Training loss\", \"Training loss - dropout rate\")\n",
    "plot_models(val_loss_dropout, labels_list, \"Validation loss\", \"Validation loss - dropout rate\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the results, where the models have a 0.5 dropout, overfitting seems to happen at a lower rate. However the minimum loss value does not appear to go as low as models with a lower dropout rate. In this plot it appears as if the 0, 0.1 and 0.2 dropout rate models have a similar pattern. This may be due to the number of epochs making it harder to see the difference in the lines at the first few number of epochs. With this in mind I will retrain on just 7 epochs to look more closely."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with dropout:  0\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.1\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.2\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with dropout:  0.5\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Lets try the same experiment on just 7 epoch to examine the curve in that area more closely.\n",
    "test_dropout(20, 2, dropout, 7)\n",
    "train_loss_dropout7 = train_loss_list\n",
    "val_loss_dropout7 = val_loss_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results.\n",
    "labels_list = ['0 dropout','0.1 dropout','0.2 dropout','0.5 dropout']\n",
    "plot_models(val_loss_dropout7, labels_list, \"Validation loss\", \"Validation loss - dropout rate\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plots give us much more insight into the overfitting happening in the first set of epochs. It is interesting to see that although the models with no dropout reach the lowest validation loss, as the dropout rate increase in future models we see the curves smooth out and overfitting begins later and less sharply. In fact at 0.5 dropout, the model performs worst in terms of validation loss but overfits much less than the other sets of models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    }
   ],
   "source": [
    "# Collecting the loss metrics.\n",
    "dropout_loss_scores = [0.7223395218720308, 0.7301147843266392, 0.7224057055808403, 0.7430859356313139]\n",
    "# Checking where overfitting begins for 0.5 dropout rate.\n",
    "print(np.argmin(val_loss_dropout[3]) + 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Build new model to predict on test set.\n",
    "\n",
    "I will now build a new models using the dropout rate 0.5. Even though the models with this dropout rate performed the worst in terms of validation loss, the curve was smoother and overfitting occured at a much slower rate. This leads me to believe that it will yield a better performance on the test set. At 0.5 dropout, the model started to overfit at 9 epochs so I will run this model on 9 epochs. This model will then be used to evaluate and collect results from the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building new models on optimum chosen dropout rate.\n",
    "model_dropout = build_model(20,2,0.5)\n",
    "model_fit(model_dropout, x_train, y_train ,x_val, y_val, 9, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2775/2775 [==============================] - 1s 465us/step\n",
      "[0.7817162378199466, 0.6720720721794678]\n"
     ]
    }
   ],
   "source": [
    "# Returns the loss value & metrics values for the model in test mode.\n",
    "test_results_dropout = model_dropout.evaluate(x_test, y_test)\n",
    "print(test_results_dropout)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Apply L1 and L2 regulisation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to build model with regulisation parameter.\n",
    "def build_model_regulisation(neuron_num, layer_num, drop_num, Lval):\n",
    "    model = models.Sequential()\n",
    "    model.add(layers.Dense(neuron_num, kernel_regularizer = Lval, activation = 'relu', input_shape = (7995,)))\n",
    "    # Sets the correct number of layers as assigned above\n",
    "    for x in range(0, layer_num):\n",
    "        model.add(layers.Dense(neuron_num, kernel_regularizer = Lval, activation = 'relu'))\n",
    "        model.add(layers.Dropout(drop_num))\n",
    "    model.add(layers.Dense(3, activation = 'softmax'))\n",
    "    model.compile(optimizer = 'rmsprop', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Adding L1 and L2 regulisation specs respectively to regulisation variable.\n",
    "regulisation = [regularizers.l1(0.001), regularizers.l2(0.001)]\n",
    "\n",
    "# Function built to test the effect of L1 and L2 regulisation on model performance.\n",
    "def test_regulisation(neuron_num, layer_num, dropout, regulisation, epoch):\n",
    "    global val_loss_list, train_loss_list, val_acc_list, train_acc_list\n",
    "    val_loss_list = []\n",
    "    train_loss_list = []\n",
    "    val_acc_list = []\n",
    "    train_acc_list = []\n",
    "    for i in range(len(regulisation)):\n",
    "        print(\"Training with regulisation: \", regulisation[i])\n",
    "        mod = build_model_regulisation(neuron_num, layer_num, dropout, regulisation[i])\n",
    "        model_fit(mod, x_train, y_train ,x_val, y_val, epoch, 512)\n",
    "        val_loss_list.append(val_loss)\n",
    "        train_loss_list.append(loss)\n",
    "        val_acc_list.append(val_acc)\n",
    "        train_acc_list.append(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with regulisation:  <keras.regularizers.L1L2 object at 0x1a7e4aa390>\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with regulisation:  <keras.regularizers.L1L2 object at 0x1a7e4aa3c8>\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Calling the above function to fit models on the set parameters.\n",
    "test_regulisation(20, 2, 0, regulisation, 28)\n",
    "# Assigning the loss and accuracy metrics to variables for reporting.\n",
    "train_loss_regul = train_loss_list\n",
    "val_loss_regul = val_loss_list\n",
    "val_acc_regul = val_acc_list\n",
    "train_acc_regul = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results for all dropout rates trained.\n",
    "labels_list = ['L1','L2']\n",
    "plot_models(train_loss_regul, labels_list, \"Training loss\", \"Training loss - regulisation\")\n",
    "plot_models(val_loss_regul, labels_list, \"Validation loss\", \"Validation loss - regulisation\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is interesting to see that L2 acheives a much lower minumum loss value but overfits quite quickly. Whereas L1 does not get near the same minimum but also doesn't seem to show clear signs of overfitting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "L1:  25\n",
      "L2:  7\n"
     ]
    }
   ],
   "source": [
    "# Collecting the loss metrics.\n",
    "regulisation_loss_scores = [0.920837802607734, 0.7966479074847591]\n",
    "# Checking where overfitting begins for L1 and L2.\n",
    "print(\"L1: \", np.argmin(val_loss_regul[0]) + 1)\n",
    "print(\"L2: \",np.argmin(val_loss_regul[1]) + 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Build new models to predict on test set.\n",
    "\n",
    "I will now build new models using L1 and L2 regulisation. As with previous tests I will set the number of epochs to where the model started to overfit. These model will then be used to evaluate and collect results from the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building new models using L1 and L2.\n",
    "model_L1 = build_model_regulisation(20,2,0, regularizers.l1(0.001)) # L1\n",
    "model_fit(model_L1, x_train, y_train ,x_val, y_val, 25, 512)\n",
    "model_L2 = build_model_regulisation(20,2,0, regularizers.l2(0.001)) # L2\n",
    "model_fit(model_L2, x_train, y_train ,x_val, y_val, 7, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2775/2775 [==============================] - 1s 497us/step\n",
      "2775/2775 [==============================] - 1s 478us/step\n",
      "L1:  [0.9144717878693933, 0.6843243244317201]\n",
      "L1:  [0.7950513233794823, 0.681801801823281]\n"
     ]
    }
   ],
   "source": [
    "# Returns the loss value & metrics values for the models in test mode.\n",
    "test_results_L1 = model_L1.evaluate(x_test, y_test)\n",
    "test_results_L2 = model_L2.evaluate(x_test, y_test)\n",
    "print(\"L1: \", test_results_L1)\n",
    "print(\"L1: \", test_results_L2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Part 3: Learning rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to build model with regulisation parameter.\n",
    "def build_model_lr(neuron_num, layer_num, drop_num, lrate):\n",
    "    model = models.Sequential()\n",
    "    model.add(layers.Dense(neuron_num, activation = 'relu', input_shape = (7995,)))\n",
    "    # For loop to build model with number of layers assigned above.\n",
    "    for x in range(0, layer_num):\n",
    "        model.add(layers.Dense(neuron_num, activation = 'relu'))\n",
    "        model.add(layers.Dropout(drop_num))\n",
    "    model.add(layers.Dense(3, activation = 'softmax'))\n",
    "    model.compile(optimizer = optimizers.RMSprop(lr = lrate), loss = 'categorical_crossentropy', metrics = ['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Learning rate values to test.\n",
    "lrate = [0.0005, 0.001, 0.002, 0.004]\n",
    "\n",
    "# Function built to test the effect of change the learning rate on model performance.\n",
    "def test_lr(neuron_num, layer_num, dropout, lrate):\n",
    "    # Global variables to use outside of the function.\n",
    "    global val_loss_list, train_loss_list, val_acc_list, train_acc_list\n",
    "    val_loss_list = []\n",
    "    train_loss_list = []\n",
    "    val_acc_list = []\n",
    "    train_acc_list = []\n",
    "    # For loop to fit a new model for each learning rate on each epoch value.\n",
    "    for i in range(len(lrate)):\n",
    "        print(\"Training with learning rate: \", lrate[i])\n",
    "        mod = build_model_lr(neuron_num, layer_num, dropout, lrate[i])\n",
    "        model_fit(mod, x_train, y_train ,x_val, y_val, 28, 512)\n",
    "        # Append loss and accuracy to assigned list for reporting.\n",
    "        val_loss_list.append(val_loss)\n",
    "        train_loss_list.append(loss)\n",
    "        val_acc_list.append(val_acc)\n",
    "        train_acc_list.append(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training with learning rate:  0.0005\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with learning rate:  0.001\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with learning rate:  0.002\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n",
      "Training with learning rate:  0.004\n",
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Calling the above function to fit models using the set parameters and variations of learning rate.\n",
    "test_lr(20, 2, 0, lrate)\n",
    "# Assigning the metric values to variables for reporting.\n",
    "train_loss_lr = train_loss_list\n",
    "val_loss_lr = val_loss_list\n",
    "val_acc_lr = val_acc_list\n",
    "train_acc_lr = train_acc_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results for all dropout rates trained.\n",
    "labels_list = ['0.0005','0.001','0.002','0.004']\n",
    "plot_models(train_loss_lr, labels_list, \"Training loss\", \"Training loss - learning rate\")\n",
    "plot_models(val_loss_lr, labels_list, \"Validation loss\", \"Validation loss - learning rate\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This test has proved to have the biggest effect on the validation loss performance. Looking at the chart above you can see that as the learning rate is reduced, the models overfit much slower and the lines smooth out showing a more consistent performance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0005:  10\n",
      "0.001:  6\n",
      "0.002:  2\n",
      "0.004:  2\n"
     ]
    }
   ],
   "source": [
    "# Collecting the loss metrics.\n",
    "lr_loss_scores = [0.7453519408767287, 0.7427598550512984, 0.7378050813803801, 0.7251482300930195]\n",
    "# Checking where overfitting begins different learning rate tests.\n",
    "print(\"0.0005: \", np.argmin(val_loss_lr[0]) + 1)\n",
    "print(\"0.001: \",np.argmin(val_loss_lr[1]) + 1)\n",
    "print(\"0.002: \",np.argmin(val_loss_lr[2]) + 1)\n",
    "print(\"0.004: \",np.argmin(val_loss_lr[3]) + 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Build new model to predict on test set.\n",
    "\n",
    "I will now build a new model using the 0.0005 learning rate. In the same arguement as the dropout rate, although the models with this learning rate had the highest minimum validation loss, the overfitting was greatly reduced so I believe it will provide improvement to test set performance. As with previous tests I will set the number of epochs to where the model started to overfit. These model will then be used to evaluate and collect results from the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "In progress: Model fitting to train and testing on validation.\n",
      "Finished. Model trained, and tested on the validation set.\n"
     ]
    }
   ],
   "source": [
    "# Building new models using L1 and L2.\n",
    "model_lr = build_model_lr(20,2,0, 0.0005) # L1\n",
    "model_fit(model_lr, x_train, y_train ,x_val, y_val, 10, 512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2775/2775 [==============================] - 1s 474us/step\n",
      "0.0005 lr:  [0.7206701238520511, 0.6936936937151729]\n"
     ]
    }
   ],
   "source": [
    "# Returns the loss value & metrics values for the models in test mode.\n",
    "test_results_lr = model_lr.evaluate(x_test, y_test)\n",
    "print(\"0.0005 lr: \", test_results_lr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Report results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the table below I have inputed the metrics taken from the tests above. I have recorded the validation loss in each case to give a comparision to the test loss and accuracy. Its important to note that the epoch number is the number used on the test of each model and when training the below models I would keep to 28 epochs to make it a fair test."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "| Test type | Validation loss | Test loss | Test accuracy | Layer number | Neurons per layer | epochs (test) | Dropout | Regulisaton | Learning rate |\n",
    "| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n",
    "| Baseline | 0.744 | 0.759 | 0.674 | 2 | 5 | 12 | 0 | None | None |\n",
    "| Scaling up | 0.724 | 0.725 | 0.693 | 2 | 20 | 5 | 0 | None | None |\n",
    "| Scaling up | 0.750 | 0.770 | 0.673 | 4 | 20 | 5 | 0 | None | None |\n",
    "| Scaling up | 0.775 | 0.777 | 0.673 | 8 | 40 | 2 | 0 | None | None |\n",
    "| Scaling up | 0.770 | 0.811 | 0.628 | 16 | 40 | 2 | 0 | None | None |\n",
    "| Regulise & tune | 0.743 | 0.782 | 0.672 | 2 | 20 | 9 | 0.5 | None | None |\n",
    "| Regulise & tune | 0.920 | 0.914 | 0.684 | 2 | 20 | 25 | 0 | L1 | None |\n",
    "| Regulise & tune | 0.797 | 0.795 | 0.682 | 2 | 20 | 7 | 0 | L2 | None |\n",
    "| Regulise & tune | 0.745 | 0.721 | 0.694 | 2 | 20 | 10 | 0 | None | 0.0005 |"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the results it is clear that the best performning model on the test set is where the learning rate is reduced to 0.0005. However on the validation set the best performing model comes from the scaling up stage in the workflow where the number of layers were two and the number of neurons per layer was 20.\n",
    "\n",
    "If I was to think about improving this project and had more time, I would definetely test out using different validation techniques to reduce the models over learning from the validation set. I would also be keen to use the grid search method on a few combinations of hyper-parameters. I can see that tuning the learning rate gave me the best improvement in my model performance, therefor I would like to try a larger number of learning rate values, potentially across a grid with L1 & L2 regulisation (which also gave me an improvement on the baseline model).\n",
    "\n",
    "I would also be keen to try more advanced neural networks and compare the results to this analysis. The network I use in this project takes a tensor which represents words featured in the tweet but does not consider the order of those words as predictive. A recurrent neural network (RNN) could work much better as they take as their input the current input as well as what they have perceived previously in time.\n",
    "\n",
    "From this project I can see that hyper-parameter tuning and model optimization have many different approaches and require alot of time and care to get the process right. I have also learnt that optimizing just based on the validation loss doesn't always yield the best results and that overfitting, the smoothness of the curve and many other factors should come into play.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can find the original dataset <a href=\"https://www.kaggle.com/crowdflower/first-gop-debate-twitter-sentiment\">here.</a>"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.5",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
